package br.com.cidandrade.album.visao;

import br.com.cidandrade.album.modelo.bd.AlbumBD;
import br.com.cidandrade.album.modelo.dao.FigurinhaDAO;
import br.com.cidandrade.album.modelo.dao.IrmaoDAO;
import br.com.cidandrade.album.modelo.entidade.Figurinha;
import br.com.cidandrade.album.modelo.entidade.Irmao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class AlbumGUI extends javax.swing.JFrame {

    private int pagina;

    ArrayList<Figurinha> figurinhas;
    int qtdeFigurinhas;
    int figurinha = 0;

    public AlbumGUI() {
        initComponents();
        //AlbumBD.albumBD();
        AlbumBD.popular();
        pagina = 1;
        atualiza();
    }

    private void atualiza() {
        String[] cposIrmao = {"ID", "Nome", "Contato"};
        List<Irmao> irmaos = IrmaoDAO.selecionarTodos();
        String[][] dadosIrmaos;
        dadosIrmaos = new String[irmaos.size()][3];
        int posicao = 0;
        for (Irmao ir : irmaos) {
            String[] umIrmao = new String[3];
            umIrmao[0] = String.valueOf(ir.getId());
            umIrmao[1] = ir.getNome();
            umIrmao[2] = ir.getContato();
            dadosIrmaos[posicao++] = umIrmao;
        }
        DefaultTableModel modelo = new DefaultTableModel(
                dadosIrmaos, cposIrmao);
        jtIrmaos.setModel(modelo);
        String[] cposFigurinha = {"Número", "Página", "Descr.", "Qtde"};
        List<Figurinha> figurinhas = FigurinhaDAO.selecionarPorPagina(pagina);
        String[][] dadosFigurinhas;
        dadosFigurinhas = new String[figurinhas.size()][4];
        posicao = 0;
        for (Figurinha fig : figurinhas) {
            String[] umaFigurinha = new String[4];
            umaFigurinha[0] = String.valueOf(fig.getNumero());
            umaFigurinha[1] = String.valueOf(fig.getPagina());
            umaFigurinha[2] = fig.getDescricao();
            umaFigurinha[3] = String.valueOf(fig.getQuantidade());
            dadosFigurinhas[posicao++] = umaFigurinha;
        }
        DefaultTableModel modeloFig = new DefaultTableModel(
                dadosFigurinhas, cposFigurinha);
        jTable1.setModel(modeloFig);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpAlbum = new javax.swing.JPanel();
        jtpAbas = new javax.swing.JTabbedPane();
        jpIrmaos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtIrmaos = new javax.swing.JTable();
        jbNovoIrmao = new javax.swing.JButton();
        jbRemoverIrmao = new javax.swing.JButton();
        jbModificarIrmao = new javax.swing.JButton();
        jpFigurinhas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jbDescricao = new javax.swing.JButton();
        jbAdicionar = new javax.swing.JButton();
        jbRetirar = new javax.swing.JButton();
        jbTrocar = new javax.swing.JButton();
        jbAnterior = new javax.swing.JButton();
        jbProximo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtIrmaos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jtIrmaos);

        jbNovoIrmao.setText("Adicionar");
        jbNovoIrmao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoIrmaoActionPerformed(evt);
            }
        });

        jbRemoverIrmao.setText("Remover");
        jbRemoverIrmao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverIrmaoActionPerformed(evt);
            }
        });

        jbModificarIrmao.setText("Modificar");
        jbModificarIrmao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarIrmaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpIrmaosLayout = new javax.swing.GroupLayout(jpIrmaos);
        jpIrmaos.setLayout(jpIrmaosLayout);
        jpIrmaosLayout.setHorizontalGroup(
            jpIrmaosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpIrmaosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpIrmaosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addGroup(jpIrmaosLayout.createSequentialGroup()
                        .addComponent(jbNovoIrmao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoverIrmao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbModificarIrmao)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jpIrmaosLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbModificarIrmao, jbNovoIrmao, jbRemoverIrmao});

        jpIrmaosLayout.setVerticalGroup(
            jpIrmaosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpIrmaosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpIrmaosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovoIrmao)
                    .addComponent(jbRemoverIrmao)
                    .addComponent(jbModificarIrmao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtpAbas.addTab("Irmãos", jpIrmaos);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jbDescricao.setText("Descrição");
        jbDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDescricaoActionPerformed(evt);
            }
        });

        jbAdicionar.setText("Adicionar");
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jbRetirar.setText("Retirar");
        jbRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRetirarActionPerformed(evt);
            }
        });

        jbTrocar.setText("Trocar");
        jbTrocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTrocarActionPerformed(evt);
            }
        });

        jbAnterior.setText("Anterior");
        jbAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnteriorActionPerformed(evt);
            }
        });

        jbProximo.setText("Próxima");
        jbProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbProximoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpFigurinhasLayout = new javax.swing.GroupLayout(jpFigurinhas);
        jpFigurinhas.setLayout(jpFigurinhasLayout);
        jpFigurinhasLayout.setHorizontalGroup(
            jpFigurinhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFigurinhasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFigurinhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpFigurinhasLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpFigurinhasLayout.createSequentialGroup()
                        .addGroup(jpFigurinhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jpFigurinhasLayout.createSequentialGroup()
                                .addComponent(jbDescricao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbAdicionar))
                            .addGroup(jpFigurinhasLayout.createSequentialGroup()
                                .addComponent(jbAnterior)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbProximo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRetirar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbTrocar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jpFigurinhasLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbAdicionar, jbAnterior, jbDescricao, jbProximo, jbRetirar, jbTrocar});

        jpFigurinhasLayout.setVerticalGroup(
            jpFigurinhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFigurinhasLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpFigurinhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbDescricao)
                    .addComponent(jbAdicionar)
                    .addComponent(jbRetirar)
                    .addComponent(jbTrocar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFigurinhasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAnterior)
                    .addComponent(jbProximo))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jtpAbas.addTab("Figurinhas", jpFigurinhas);

        javax.swing.GroupLayout jpAlbumLayout = new javax.swing.GroupLayout(jpAlbum);
        jpAlbum.setLayout(jpAlbumLayout);
        jpAlbumLayout.setHorizontalGroup(
            jpAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAlbumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtpAbas)
                .addContainerGap())
        );
        jpAlbumLayout.setVerticalGroup(
            jpAlbumLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAlbumLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtpAbas)
                .addGap(216, 216, 216))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRetirarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this, "Você quer retirar essa figurinha?", "Confirmação",
                JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            int numeroFigurinha = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            int quantidadeFigurinha = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            if (quantidadeFigurinha > 0) {
                quantidadeFigurinha--;
            }
            FigurinhaDAO.alterarQuantidade(numeroFigurinha, quantidadeFigurinha);
            this.atualiza();

        }

    }//GEN-LAST:event_jbRetirarActionPerformed

    private void jbTrocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTrocarActionPerformed
        int numeroFigurinha1 = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        int quantidadeFigurinha1 = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
        String numeroFigurinha2 = JOptionPane.showInputDialog("Digite o numero da figurinha para a troca");
        int quantidadeFigurinha2 = Integer.parseInt(jTable1.getValueAt(Integer.parseInt(numeroFigurinha2) - 1, 3).toString());
        if (Integer.parseInt(numeroFigurinha2) > 0 && Integer.parseInt(numeroFigurinha2) < 301) {
            if (quantidadeFigurinha1 > 1 && quantidadeFigurinha1 < 127 && quantidadeFigurinha2 > 1 && quantidadeFigurinha2 < 127) {
                quantidadeFigurinha1--;
                ++quantidadeFigurinha2;
                FigurinhaDAO.alterarQuantidade(numeroFigurinha1, quantidadeFigurinha1);
                FigurinhaDAO.alterarQuantidade(Integer.parseInt(numeroFigurinha2), quantidadeFigurinha2);
            }
        }
        this.atualiza();
    }//GEN-LAST:event_jbTrocarActionPerformed

    private void jbRemoverIrmaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverIrmaoActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this, "Você quer deletar esse irmao?", "Confirmação",
                JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            int id = Integer.parseInt(jtIrmaos.getValueAt(jtIrmaos.getSelectedRow(), 0).toString());
            IrmaoDAO.remover(new Irmao(id, "", ""));
            this.atualiza();
        }

    }//GEN-LAST:event_jbRemoverIrmaoActionPerformed

    private void jbNovoIrmaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoIrmaoActionPerformed

        String nome = JOptionPane.showInputDialog("Digite o nome do seu irmao");
        String contato = JOptionPane.showInputDialog("Digite o contato do seu irmao");

        IrmaoDAO.inserir(new Irmao(1, nome, contato));
        this.atualiza();

    }//GEN-LAST:event_jbNovoIrmaoActionPerformed


    private void jbAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnteriorActionPerformed
        int pagina = Integer.parseInt(jTable1.getValueAt(0, 1).toString());
        if (pagina > 1) {
            this.pagina = --pagina;
        }
        this.atualiza();
    }//GEN-LAST:event_jbAnteriorActionPerformed

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this, "Você quer adicionar essa figurinha?", "Confirmação",
                JOptionPane.YES_NO_OPTION);

        if (resposta == JOptionPane.YES_OPTION) {
            int numeroFigurinha = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
            int quantidadeFigurinha = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
            if (quantidadeFigurinha < 127) {
                quantidadeFigurinha++;
            }
            FigurinhaDAO.alterarQuantidade(numeroFigurinha, quantidadeFigurinha);
            this.atualiza();

        }
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jbDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDescricaoActionPerformed
        String resposta = JOptionPane.showInputDialog("Digite a descricao da figurinha");
        int numeroFigurinha = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        FigurinhaDAO.alterarDescricao(numeroFigurinha, resposta);
        this.atualiza();
    }//GEN-LAST:event_jbDescricaoActionPerformed

    private void jbProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbProximoActionPerformed
        int pagina = Integer.parseInt(jTable1.getValueAt(0, 1).toString());
        if (pagina < 31) {
            this.pagina = ++pagina;
        }
        this.atualiza();
    }//GEN-LAST:event_jbProximoActionPerformed

    private void jbModificarIrmaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarIrmaoActionPerformed
        int id = Integer.parseInt(jtIrmaos.getValueAt(jtIrmaos.getSelectedRow(), 0).toString());
        String nome = jtIrmaos.getValueAt(jtIrmaos.getSelectedRow(), 1).toString();
        String contato = jtIrmaos.getValueAt(jtIrmaos.getSelectedRow(), 2).toString();
        String novoNome = JOptionPane.showInputDialog("Digite o novo Nome de irmao", nome );
        String novoContato = JOptionPane.showInputDialog("Digite o novo Contato de irmao", contato );
        IrmaoDAO.alterar(new Irmao (id, novoNome, novoContato));
        this.atualiza();
        
    }//GEN-LAST:event_jbModificarIrmaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlbumGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlbumGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAnterior;
    private javax.swing.JButton jbDescricao;
    private javax.swing.JButton jbModificarIrmao;
    private javax.swing.JButton jbNovoIrmao;
    private javax.swing.JButton jbProximo;
    private javax.swing.JButton jbRemoverIrmao;
    private javax.swing.JButton jbRetirar;
    private javax.swing.JButton jbTrocar;
    private javax.swing.JPanel jpAlbum;
    private javax.swing.JPanel jpFigurinhas;
    private javax.swing.JPanel jpIrmaos;
    private javax.swing.JTable jtIrmaos;
    private javax.swing.JTabbedPane jtpAbas;
    // End of variables declaration//GEN-END:variables
}
